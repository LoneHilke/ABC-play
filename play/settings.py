"""
Django settings for play project.

Generated by 'django-admin startproject' using Django 5.0.14.

For more information on this file, see
https://docs.djangoproject.com/en/5.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.0/ref/settings/
"""

from pathlib import Path
import os

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-9t596$p3#a#1r1hv(1e(ilt8!!gaq3a-lt^@^3f^c!_jb_3usv'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'gunicorn',
    'whitenoise',
    'menu_generator',
    'dansk',
    'engelsk',
    'forside',
    'leg',
    'tysk',

]

NAV_MENU_LEFT = [
    {
        "name": "Home",
        "url": "/",
    },
    #{
        #"name": "Info",
       # "url": "/Info",
    #},
    {
        "name": "A",
        "url": "/dansk/danska",
    },
    {
        "name": "B",
        "url": "/dansk/danskb",
    },
    {
        "name": "C",
        "url": "/dansk/danskc",
    },
    {
        "name": "D",
        "url": "/dansk/danskd",
    },
    {
        "name": "E",
        "url": "/dansk/danske",
    },
    {
        "name": "F",
        "url": "/dansk/danskf",
    },
    {
        "name": "G",
        "url": "/dansk/danskg",
    },
    {
        "name": "H",
        "url": "/dansk/danskh",
    },
    {
        "name": "I",
        "url": "/dansk/danski",
    },
    {
        "name": "J",
        "url": "/dansk/danskj",
    },
    {
        "name": "K",
        "url": "/dansk/danskk",
    },
    {
        "name": "L",
        "url": "/dansk/danskl",
    },
    {
        "name": "M",
        "url": "/dansk/danskm",
    },
    {
        "name": "N",
        "url": "/dansk/danskn",
    },
    {
        "name": "O",
        "url": "/dansk/dansko",
    },
    {
        "name": "P",
        "url": "/dansk/danskp",
    },
    {
        "name": "Q",
        "url": "/dansk/danskq",
    },
    {
        "name": "R",
        "url": "/dansk/danskr",
    },
    {
        "name": "S",
        "url": "/dansk/dansks",
    },
    {
        "name": "T",
        "url": "/dansk/danskt",
    },
    {
        "name": "U",
        "url": "/dansk/dansku",
    },
    {
        "name": "V",
        "url": "/dansk/danskv",
    },
    {
        "name": "W",
        "url": "/dansk/danskw",
    },
    {
        "name": "X",
        "url": "/dansk/danskx",
    },
    {
        "name": "Y",
        "url": "/dansk/dansky",
    },
    {
        "name": "Z",
        "url": "/dansk/danskz",
    },
    {
        "name": "Æ",
        "url": "/dansk/danskæ",
    },
    {
        "name": "Ø",
        "url": "/dansk/danskø",
    },
    {
        "name": "Å",
        "url": "/dansk/danskå",
    },
    #{
    #    "name": "Stav til ordet",
     #   "url": "/gaet",
    #},
    #{
    #    "name": "Find det rette ord",
    #    "url": "#",
    #},
    #{
    #    "name": "Hvad mangler",
    #    "url": "#",
    #},
    {
        "name": "Tilføj",
        "url": "/dansk/tilføj",
    },
]
NAV_MENU_RIGHT = [
    {
        "name": "Stav ord",
        "url": "login_url_view",  # reversible
        "validators": ["menu_generator.validators.is_anonymous"],
    },
    {
        "name": "Find det rette ord",
        "url": "register_view_url",  # reversible
        "validators": ["menu_generator.validators.is_anonymous"],
    },
    {
        "name": "Hvad mangler",
        "url": "register_view_url",  # reversible
        "validators": ["menu_generator.validators.is_anonymous"],
    },
    {
        "name": "Hvad mangler",
        "url": "/acount",
        "validators": ["menu_generator.validators.is_authenticated"],
        "submenu": [
            {
                "name": "Profile",
                "url": "/account/profile",
            },
            {
                "name": "Account Balance",
                "url": "/account/balance",
                "validators": ["myapp.profiles.is_paid_user"],
            },
            {
                "name": "Account Secrets",
                "url": "/account/secrets",
                "validators": ["menu_generator.validators.is_superuser"],
            }
        ],
    }
]

FOOTER_MENU_LEFT = [
    {
        "name": "Leg",
        "url": "facebook.com/foobar",
    },
    {
        "name": "Contact US",
        "url": "/contact",
    },
]

FOOTER_MENU_RIGHT = [
    {
        "name": "Address",
        "url": "/address",
    },
]



MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'play.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'play.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.0/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.0/howto/static-files/

STATIC_URL = 'static/'
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')
MEDIA_URL = '/image/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'image')


# Default primary key field type
# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
